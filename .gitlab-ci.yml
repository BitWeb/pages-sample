stages:
  - test
  - build
  - build-docker
  - publish

image:
  name: docker.repo.tehik.ee/node:lts-bullseye-slim
  pull_policy: always

cache:
  key:
    files:
      - package-lock.json
  paths:
    - .npm/

before_script:
  - HUSKY=0 npm ci --cache .npm --prefer-offline

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

lint:
  stage: test
  interruptible: true
  script:
    - npm run lint:ci
  rules:
    - if: $CI_COMMIT_AUTHOR	== "semantic-release-bot <semantic-release-bot@martynus.net>"
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

test:
  stage: test
  interruptible: true
  script:
    - npm run test
  rules:
    - if: $CI_COMMIT_AUTHOR	== "semantic-release-bot <semantic-release-bot@martynus.net>"
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

build:
  stage: build
  interruptible: true
  script:
    - npm run build
  rules:
    - if: $CI_COMMIT_AUTHOR	== "semantic-release-bot <semantic-release-bot@martynus.net>"
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

build-sb:
  stage: build
  interruptible: true
  script:
    - npm run build:sb
  rules:
    - if: $CI_COMMIT_AUTHOR	== "semantic-release-bot <semantic-release-bot@martynus.net>"
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  artifacts:
    paths:
      dist/storybook/components/

build-sb-docker:
  image: docker.repo.tehik.ee/docker:23
  stage: build-docker
  interruptible: true
  dependencies:
    - build-sb
  variables:
    # DinD variables
    DOCKER_HOST: "tcp://docker:2376"
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  services:
    - name: docker.repo.tehik.ee/docker:23-dind
      alias: docker
      entrypoint: ["dockerd-entrypoint.sh"]
      command: ["--registry-mirror=https://docker.repo.tehik.ee"]
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID . 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
  rules:
   - if: $CI_COMMIT_AUTHOR     == "semantic-release-bot <semantic-release-bot@martynus.net>"
     when: never
   - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
   - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH 

publish-library:
  stage: publish
  script:
    - apt-get update && apt-get install -y --no-install-recommends git-core ca-certificates
    - npm run build
    - |
      {
        echo "@tehik:registry=https://$ARTIFACTORY_NPM_API_URL"
        echo "//$ARTIFACTORY_NPM_API_URL:_authToken=$NPM_AUTH_TOKEN"
        echo "email=$NPM_AUTH_EMAIL"
      } | tee -a .npmrc
    - HUSKY=0 npm run semantic-release
  rules:
    - if: $CI_COMMIT_AUTHOR	== "semantic-release-bot <semantic-release-bot@martynus.net>"
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

publish-storybook:
  stage: publish
  script:
    - npm run build:sb
    - npm install netlify-cli -g
    - npx netlify deploy --auth $NETLIFY_AUTH_TOKEN --site $NETLIFY_SITE_ID --dir ./dist/storybook/components --prod
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
