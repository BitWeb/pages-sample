stages:
  - publish

default:
  image: docker.repo.tehik.ee/node:lts-bullseye-slim
  before_script:
    - npm ci --cache .npm --prefer-offline
    - |
      {
        echo "@tehik:registry=$ARTIFACTORY_NPM_API_URL@tehik/react-components"
        echo "//$ARTIFACTORY_NPM_API_URL:_authToken=${CI_JOB_TOKEN}"
      } | tee -a .npmrc
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm/

publish-library:
  stage: publish
  script:
    - npm run build
    - cp ./.npmrc ./dist/packages/components
    - cd ./dist/packages/components
    - npm publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH


#     - export NPM_REGISTRY=$ARTIFACTORY_NPM_API_URL$NPM_REPO_KEY_VIRTUAL
#    - echo $NPM_NPMRC_BASE64 | base64 -d > ~/.npmrc
#    - sed -i "s,__NPM_AUTH_TOKEN__,$NPM_AUTH_TOKEN," ~/.npmrc
#    - sed -i "s,__NPM_REGISTRY__,$NPM_REGISTRY," ~/.npmrc
#    - sed -i "s,__NPM_EMAIL__,$NPM_EMAIL," ~/.npmrc
#    - npm install
#    - npm set @ria:registry $ARTIFACTORY_NPM_API_URL$NPM_REPO_KEY_RELEASE
#    - npm run build
#    - cd dist/ria-components-angular
#    - npm publish
