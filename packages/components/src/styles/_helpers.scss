// https://github.com/h5bp/main.css/blob/main/src/_helpers.css

.hidden,
[hidden] {
  display: none !important;
}

.block {
  display: block !important;
}

.inline-block {
  display: inline-block;
}

.visually-hidden,
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;

  &.focusable:active,
  &.focusable:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
    white-space: inherit;
  }
}

.text-uppercase {
  text-transform: uppercase;
}

.text-capitalize {
  text-transform: capitalize;
}

.text-capitalize-first::first-letter {
  text-transform: capitalize;
}

.text-normal {
  font-family: Roboto, Arial, Helvetica, sans-serif;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: var(--color-text);
}

.text-small {
  font-size: 0.875rem;
}

.text-bold {
  font-weight: 700;
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-primary {
  color: var(--color-primary);
}

.text-secondary {
  color: var(--color-text-secondary);
}

.text-error {
  color: var(--color-error);
}

.text-warning {
  color: var(--color-warning);
}

.text-success {
  color: var(--color-success);
}

.text-disabled {
  color: var(--color-text-disabled);
}

.text-black {
  color: var(--color-black);
}

.text-white {
  color: var(--color-white);
}

.inactive {
  opacity: 0.5;
}
